openapi: 3.0.3
info:
  title: Ticketing System API
  version: 1.0.0
  description: API for a ticketing system with role-based access control

paths:
  /login:
    post:
      summary: Login endpoint
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '204':
          description: Login succeeded
        '401':
          description: Login failed

  /tickets:
    get:
      x-spring-paginated: true
      summary: List tickets
      operationId: listTickets
      description: Employees see their own tickets. IT Support sees all tickets.
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [NEW, IN_PROGRESS, RESOLVED]
        - name: id
          in: query
          required: false
          schema:
            type: long
      responses:
        '200':
          description: A list of tickets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketPage'
    post:
      summary: Create a new ticket
      operationId: createTicket
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketCreate'
      responses:
        '201':
          description: Ticket created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'

  /tickets/{ticketId}:
    get:
      summary: Get a ticket by ID
      operationId: getTicketById
      security:
        - BearerAuth: []
      parameters:
        - name: ticketId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Ticket details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
    patch:
      summary: Update ticket status (IT Support only)
      operationId: updateTicketStatus
      security:
        - BearerAuth: []
      parameters:
        - name: ticketId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [NEW, IN_PROGRESS, RESOLVED]
      responses:
        '200':
          description: Ticket status updated

  /tickets/{ticketId}/comments:
    get:
      x-spring-paginated: true
      summary: List comments on a ticket
      operationId: listComments
      security:
        - BearerAuth: []
      parameters:
        - name: ticketId
          in: path
          required: true
          schema:
            type: long
      responses:
        '200':
          description: List of comments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentPage'
    post:
      summary: Add a comment to a ticket
      operationId: addComment
      security:
        - BearerAuth: []
      parameters:
        - name: ticketId
          in: path
          required: true
          schema:
            type: long
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentCreate'
      responses:
        '201':
          description: Comment added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'

  /tickets/{ticketId}/comments/{commentId}:
    patch:
      summary: Update a comment
      operationId: updateComment
      security:
        - BearerAuth: []
      parameters:
        - name: ticketId
          in: path
          required: true
          schema:
            type: integer
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
      responses:
        '200':
          description: Comment updated

components:
  schemas:
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    TicketPage:
      type: object
      properties:
        totalPages:
          type: integer
        totalElements:
          type: string
        content:
          type: array
          items:
            $ref: '#/components/schemas/Ticket'
    Ticket:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        priority:
          $ref: '#/components/schemas/Priority'
        category:
          $ref: '#/components/schemas/Category'
        status:
          $ref: '#/components/schemas/Status'
        created_at:
          type: string
          format: date-time
        created_by:
          $ref: '#/components/schemas/Account'
    TicketCreate:
      type: object
      required: [title, description, priority, category, status]
      properties:
        title:
          type: string
        description:
          type: string
        priority:
          $ref: '#/components/schemas/Priority'
        category:
          $ref: '#/components/schemas/Category'
        status:
          $ref: '#/components/schemas/Status'
    Status:
      type: string
      enum: [NEW, IN_PROGRESS, RESOLVED]
    Priority:
      type: string
      enum: [LOW, MEDIUM, HIGH]
    Category:
      type: string
      enum: [NETWORK, HARDWARE, SOFTWARE, OTHER]
    CommentPage:
      type: object
      properties:
        totalPages:
          type: integer
        totalElements:
          type: string
        content:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    Comment:
      type: object
      properties:
        id:
          type: integer
        text:
          type: string
        created_at:
          type: string
          format: date-time
        created_by:
          $ref: '#/components/schemas/Account'
        ticket_id:
          type: integer
    CommentCreate:
      type: object
      required: [text]
      properties:
        text:
          type: string
    Account:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
